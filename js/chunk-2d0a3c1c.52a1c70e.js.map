{"version":3,"sources":["webpack:///./src/data/codes/javascript/hyperLink.js"],"names":[],"mappings":"kHAAA,OAAgB","file":"js/chunk-2d0a3c1c.52a1c70e.js","sourcesContent":["export default `function htmlDecode(str: string): string {\r\n    let s = '';\r\n    if (str.length == 0) return '';\r\n    s = str.replace(/&amp;/g, '&');\r\n    s = s.replace(/&lt;/g, '<');\r\n    s = s.replace(/&gt;/g, '>');\r\n    s = s.replace(/&nbsp;/g, ' ');\r\n    s = s.replace(/&#39;/g, \"'\");\r\n    s = s.replace(/&quot;/g, '\"');\r\n    s = s.replace(/&ldquo;/g, '“');\r\n    s = s.replace(/&rdquo;/g, '”');\r\n    s = s.replace(/&yen;/g, '¥');\r\n    return s;\r\n}\r\n\r\nfunction htmlEncode(str) {\r\n    let s = '';\r\n    if (str.length == 0) return '';\r\n    s = s.replace(/</g, '&lt;');\r\n    s = s.replace(/>/g, '&gt;');\r\n    s = s.replace(/ /g, '&nbsp;');\r\n    s = s.replace(/\\'/g, '&#39;');\r\n    s = s.replace(/\\\"/g, '&quot;');\r\n    s = s.replace(/“/g, '&ldquo;');\r\n    s = s.replace(/”/g, '&rdquo;');\r\n    s = s.replace(/¥/g, '&yen;');\r\n    s = str.replace(/&/g, '&amp;');\r\n    return s;\r\n}\r\nfixLink(str: string) {\r\n    if (!str.startsWith('http')) {\r\n        return '//' + str;\r\n    }\r\n    return str;\r\n}\r\n\r\n/**\r\n * 将文本中的链接识别出来并转为JSON\r\n */\r\ntransformLinks(str: string) {\r\n    const that = this;\r\n    /** 这里可以这样判定当前信息是否为图片是因为信息为图片时是一条单独的信息，且不会被转义, 若是用户输入的内容会被转义 */\r\n    if (str.startsWith('<img')) return str;\r\n\r\n    const normalStr = that.htmlDecode(str);\r\n    /** 正常匹配url正则即可 */\r\n    const urlReg =\r\n        /(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.(com|edu|gov|int|net|org|info|cn|mo|tw|hk|io){1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=;]*)/g;\r\n    const urls: string[] = [];\r\n    const link = normalStr.replace(urlReg, function ($0) {\r\n        urls.push($0);\r\n        return LINK_IDENTIFICATION;\r\n    });\r\n    const encodeStr = this.htmlEncode(link);\r\n    const reg = new RegExp(LINK_IDENTIFICATION, 'g');\r\n    return encodeStr.replace(reg, function () {\r\n        const url = urls.shift() || '';` + \r\n        'return `<a href=\"${that.fixLink(url)}\" target=\"_blank\" class=\"msg-link\">${url}</a>`;' + `\r\n    });\r\n}\r\n`\r\n\r\n"],"sourceRoot":""}